import { db } from '../../db';
import { Resolvers, HvacValueColumns } from '../../autogenerated-types';

export const HVAC_TABLE = 'hvac_values';
export const HVAC_COLUMNS = Object.keys(HvacValueColumns).map((x: any) => HvacValueColumns[x]);

export const resolvers: Resolvers = {
  Query: {
    hvacValues: async (parent, args) => {
      try {
        const query = db(HVAC_TABLE).select(HVAC_COLUMNS);

        // set optional where clauses
        if (args.source) query.where('source', args.source);
        if (args.startDate) query.where('dateTime', '>=', args.startDate);
        if (args.endDate) query.where('dateTime', '<=', args.endDate);

        //TODO: Add support for desc and asc (requires object-syntax for columns in sorting)
        // https://knexjs.org/#Builder-orderBy
        if (args.orderBy) query.orderBy(args.orderBy);

        return await query;
      } catch (err) { throw err; }
    }
  },
  Mutation: {
    addHvacValue: async (parent, args) => {
      try {
        const query = db(HVAC_TABLE)
          .insert(args.input)
          .returning(HVAC_COLUMNS);
        const results = await query;
        return results[0];
      } catch (err) { throw err; }
    }
  }
};